// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package releaseswatcher

// Injectors from wire.go:

func InitializeApp(connection ConnectionString, token DiscogsToken, root RootPath) (Application, error) {
	pool, err := NewPgxPool(connection)
	if err != nil {
		return Application{}, err
	}
	db, err := NewDB(pool)
	if err != nil {
		return Application{}, err
	}
	cache := NewCache(pool)
	library, err := NewLibrary(token, db, cache)
	if err != nil {
		return Application{}, err
	}
	watcher, err := NewWatcher(root, db, library)
	if err != nil {
		return Application{}, err
	}
	differ := NewDiffer(db)
	application := NewApplication(db, watcher, differ)
	return application, nil
}

// wire.go:

type Application struct {
	DB      DB
	Watcher Watcher
	Differ  Differ
}

func NewApplication(
	db DB,
	watcher Watcher,
	differ Differ,
) Application {
	return Application{
		DB:      db,
		Watcher: watcher,
		Differ:  differ,
	}
}
